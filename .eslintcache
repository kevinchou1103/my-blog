[{"E:\\react-app\\src\\index.js":"1","E:\\react-app\\src\\App.js":"2","E:\\react-app\\src\\store\\store.js":"3","E:\\react-app\\src\\store\\reducers.js":"4","E:\\react-app\\src\\router\\index.jsx":"5","E:\\react-app\\src\\components\\music\\index.jsx":"6","E:\\react-app\\src\\components\\header\\index.jsx":"7","E:\\react-app\\src\\store\\actions.js":"8","E:\\react-app\\src\\utils\\format-utils.js":"9","E:\\react-app\\src\\pages\\home\\index.jsx":"10","E:\\react-app\\src\\pages\\index.jsx":"11","E:\\react-app\\src\\pages\\mine\\index.jsx":"12","E:\\react-app\\src\\pages\\login\\index.jsx":"13","E:\\react-app\\src\\components\\musicRequest\\index.jsx":"14","E:\\react-app\\src\\pages\\noPage\\index.jsx":"15","E:\\react-app\\src\\components\\music\\music-list\\index.jsx":"16","E:\\react-app\\src\\components\\musicRequest\\config.js":"17","E:\\react-app\\src\\router\\router.config.jsx":"18"},{"size":153,"mtime":1610885164189,"results":"19","hashOfConfig":"20"},{"size":703,"mtime":1616077165889,"results":"21","hashOfConfig":"20"},{"size":130,"mtime":1616069994533,"results":"22","hashOfConfig":"20"},{"size":640,"mtime":1616069994533,"results":"23","hashOfConfig":"20"},{"size":726,"mtime":1616078369221,"results":"24","hashOfConfig":"20"},{"size":8056,"mtime":1616069994525,"results":"25","hashOfConfig":"20"},{"size":1354,"mtime":1616069994524,"results":"26","hashOfConfig":"20"},{"size":119,"mtime":1616069994532,"results":"27","hashOfConfig":"20"},{"size":1088,"mtime":1616069994534,"results":"28","hashOfConfig":"20"},{"size":436,"mtime":1616069994528,"results":"29","hashOfConfig":"20"},{"size":173,"mtime":1616069994528,"results":"30","hashOfConfig":"20"},{"size":2657,"mtime":1616069994530,"results":"31","hashOfConfig":"20"},{"size":1710,"mtime":1616069994529,"results":"32","hashOfConfig":"20"},{"size":912,"mtime":1612280383240,"results":"33","hashOfConfig":"20"},{"size":627,"mtime":1616069994531,"results":"34","hashOfConfig":"20"},{"size":2081,"mtime":1616069994526,"results":"35","hashOfConfig":"20"},{"size":79,"mtime":1612277069011,"results":"36","hashOfConfig":"20"},{"size":768,"mtime":1616077877469,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"126cvpx",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\react-app\\src\\index.js",[],["82","83"],"E:\\react-app\\src\\App.js",["84","85"],"E:\\react-app\\src\\store\\store.js",[],"E:\\react-app\\src\\store\\reducers.js",[],"E:\\react-app\\src\\router\\index.jsx",[],"E:\\react-app\\src\\components\\music\\index.jsx",["86","87","88","89"],"import React, { memo, useRef, useEffect, useState, useCallback } from 'react';\r\nimport { Slider } from 'antd';\r\nimport classNames from 'classnames';\r\nimport MusicRequest from \"@/components/musicRequest\";\r\n\r\nimport './index.scss'\r\nimport {\r\n  getPlaySong,\r\n  formatDate,\r\n  getSizeImage\r\n} from '@/utils/format-utils'\r\n\r\nimport MusicList from \"./music-list\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet showLoopTextTimer = null // 循环提示文字延时关闭\r\n\r\nconst BlogMusic = memo((props) => {\r\n  const { level } = props\r\n\r\n  const audioRef = useRef()\r\n  const [playing, setPlaying] = useState(false)\r\n  const [audioData, setAudioData] = useState({}) // 获取到的音乐信息\r\n  const [currentTime, setCurrentTime] = useState(0) // 当前音乐已播放时长\r\n  const [progress, setProgress] = useState(0) // 音乐进度条\r\n  const [isChange, setIsChange] = useState(false) // 音乐进度条是否在改变中\r\n  const [songsId, setSongId] = useState(0) // 当前音乐ID\r\n  const [showList, setShowList] = useState(false)\r\n  const [list1, setList1] = useState([])\r\n  const [list2, setList2] = useState([])\r\n  const [currentList, setCurrentList] = useState(0) // 当前音乐列表\r\n  const [currentIndex, setCurrentIndex] = useState(0) // 当前音乐列表歌曲\r\n  const [loopType, setLoopType] = useState(2)  // 音乐循环 0列表循环 1单曲循环 2随机循环\r\n  const [showLoopText, setShowLoopText] = useState(false)\r\n  const [volumeValue, setVolumeValue] = useState(100) // 当前音乐音量\r\n  const [showVolumeProcess, setShowVolumeProcess] = useState(false)\r\n\r\n  const imgUrl = (audioData.al && audioData.al.picUrl) || '';\r\n  const singerName = (audioData.ar && audioData.ar[0].name) || '未知'\r\n\r\n  useEffect(() => {\r\n    if (!level) return\r\n    // 热歌榜单\r\n    MusicRequest({\r\n      // url: `/playlist/detail/dynamic`,\r\n      // data: {\r\n      //   id:3778678\r\n      // }\r\n      url: '/top/list',\r\n      data: {\r\n        idx: 1\r\n      }\r\n    }).then(res => {\r\n      setList1(res.playlist.tracks)\r\n      setSongId(res.playlist.tracks[0].id)\r\n    })\r\n    // 新歌榜\r\n    MusicRequest({\r\n      // url: `/playlist/detail/dynamic`,\r\n      // data: {\r\n      //   id:3779629\r\n      // }\r\n      url: '/top/list',\r\n      data: {\r\n        idx: 0\r\n      }\r\n    }).then(res => {\r\n      setList2(res.playlist.tracks)\r\n    })\r\n  },[level])\r\n\r\n  useEffect(() => {\r\n    if(list1.length) {\r\n      audioRef.current.src = getPlaySong(songsId)\r\n      MusicRequest({\r\n        url: `/song/detail`,\r\n        data: {\r\n          ids: songsId\r\n        }\r\n      }).then(res => {\r\n        // console.log(res.songs[0])\r\n        setAudioData(res.songs[0])\r\n        if(level) playMusic()\r\n      })\r\n    }\r\n  }, [songsId])\r\n\r\n  useEffect(() => {\r\n    if(list1.length) {\r\n      setShowLoopText(true)\r\n      if (showLoopTextTimer != null) {\r\n        clearTimeout(showLoopTextTimer)\r\n      }\r\n      showLoopTextTimer = setTimeout(() => {\r\n        setShowLoopText(false)\r\n      }, 2000)\r\n    }\r\n  },[loopType])\r\n\r\n  const playMusic = () => {\r\n    playing ? audioRef.current.pause() : audioRef.current.play();\r\n    setPlaying(!playing)\r\n  }\r\n\r\n  const updateTime = (e) => {\r\n    setCurrentTime(e.target.currentTime*1000)\r\n    if(!isChange){\r\n      setProgress(e.target.currentTime*1000*100 / audioData.dt)\r\n    }\r\n  }\r\n  const sliderChange = (value) => {\r\n    setIsChange(true)\r\n    setCurrentTime(value / 100 * audioData.dt)\r\n    setProgress(value)\r\n  }\r\n\r\n  const sliderAfterChange = (value) => {\r\n    const currentTime = value / 100 * audioData.dt / 1000\r\n    setCurrentTime(currentTime * 1000)\r\n    audioRef.current.currentTime = currentTime\r\n    setIsChange(false)\r\n    if (!playing) {\r\n      playMusic()\r\n    }\r\n  }\r\n  const endPlaying = () => {\r\n    if(loopType === 1) {\r\n      audioRef.current.play();\r\n      setPlaying(true)\r\n    } else {\r\n      playPreMusic('next')\r\n    }\r\n  }\r\n  const changeMusic = useCallback((value,list,index) => {\r\n    if(value !== songsId) {\r\n      setPlaying(false)\r\n      setSongId(value)\r\n    }\r\n    setCurrentList(list)\r\n    setCurrentIndex(index)\r\n  },[songsId])\r\n  const playPreMusic = (type) => {\r\n    let list = currentList === 0 ? list1 : list2\r\n    let index = 0\r\n    let len = list.length - 1\r\n    if(loopType === 2) {\r\n      let num = parseInt(Math.random() * len) + 1\r\n      index = num === currentIndex ? len : num\r\n    } else {\r\n      switch (type) {\r\n        case 'pre':\r\n          index = currentIndex === 0 ? len : currentIndex - 1\r\n          break;\r\n        case 'next':\r\n          index = currentIndex === len ? 0 : currentIndex + 1\r\n          break;\r\n        default :\r\n          index = currentIndex\r\n      }\r\n    }\r\n    setPlaying(false)\r\n    setCurrentIndex(index)\r\n    setSongId(list[index].id)\r\n  }\r\n  const volumeChange = (value) => {\r\n    setVolumeValue(value)\r\n    audioRef.current.volume = value / 100;\r\n  }\r\n\r\n  return (\r\n      <>\r\n      {\r\n        level ? \r\n        <div className={classNames(\"blog-music\",\"sprite_player\")}>\r\n          <div className=\"content\">\r\n            <div className=\"control\">\r\n              <span className=\"prev sprite_player\" onClick={e => playPreMusic('pre')}></span>\r\n              <span className={classNames(playing ? 'pause' : 'play',\"play sprite_player\")} onClick={e => playMusic()}></span>\r\n              <span className=\"next sprite_player\" onClick={e => playPreMusic('next')}></span>\r\n            </div>\r\n            <div className=\"detail\">\r\n              <div className=\"d-image\">\r\n                <img src={getSizeImage(imgUrl, 35)} onClick={_ => setShowList(!showList)}/>\r\n              </div>   \r\n              <div className=\"d-info\">\r\n                <div className=\"song\">\r\n                  <span>{audioData.name}</span>\r\n                  <a>{singerName}</a>\r\n                </div>\r\n                <div className=\"progress\">\r\n                  <Slider value={progress} \r\n                    onChange={sliderChange}\r\n                    onAfterChange={sliderAfterChange}/>\r\n                  <div className=\"time\">\r\n                    <span className=\"now-time\">{formatDate(currentTime, \"mm:ss\")}</span>\r\n                    <span className=\"divider\">/</span>\r\n                    <span className=\"duration\">{formatDate(audioData.dt, \"mm:ss\")}</span>\r\n                  </div>\r\n                </div>\r\n              </div>       \r\n            </div>\r\n            <div className=\"setting\">\r\n              <span className=\"sprite_player volume\" onClick = {_ => setShowVolumeProcess(!showVolumeProcess)}></span>\r\n              <span className={classNames(loopType === 0 ? \"icn-loop\" : loopType === 1 ? \"icn-one\" : \"icn-shuffle\"\r\n                ,\"sprite_player\")} onClick={e => setLoopType(_ => loopType === 2 ? 0 : loopType + 1)}></span>\r\n              <span className=\"sprite_player playlist\" onClick={_ => setShowList(!showList)}>\r\n                {list1.length + list2.length}\r\n              </span>\r\n              {\r\n                showLoopText ? <div className=\"loop_text\">{loopType === 0 ? \"循环播放\" : loopType === 1 ? \"单曲循环\" : \"随机播放\"}</div> : ''\r\n              }\r\n              {\r\n                showVolumeProcess ? \r\n                <div className=\"volumeProcess\">\r\n                  <Slider value={volumeValue} \r\n                    onChange={volumeChange}\r\n                    vertical\r\n                    tooltipVisible/>\r\n                </div> : ''\r\n              }\r\n              \r\n            </div>\r\n            <audio ref={audioRef} \r\n              onTimeUpdate={e => updateTime(e)}\r\n              onEnded={e => endPlaying()}/>\r\n          </div>\r\n          {\r\n            showList ? \r\n            <MusicList \r\n              list = {[list1,list2]}\r\n              changeMusic = {changeMusic}\r\n              musicList = {currentList}\r\n              musicIndex = {currentIndex}\r\n            />: ''\r\n          }\r\n        </div>\r\n        :''\r\n      }\r\n      \r\n      </>\r\n    )\r\n})\r\n\r\nconst mapStateToProps = state => ({\r\n  level: state.user.level\r\n})\r\nexport default connect(mapStateToProps)(BlogMusic)","E:\\react-app\\src\\components\\header\\index.jsx",[],"E:\\react-app\\src\\store\\actions.js",[],"E:\\react-app\\src\\utils\\format-utils.js",["90"],"export function getPlaySong(id) {\r\n  return `https://music.163.com/song/media/outer/url?id=${id}.mp3`;\r\n}\r\nexport function getSizeImage(imgUrl, size) {\r\n  return `${imgUrl}?param=${size}x${size}`;\r\n}\r\nexport function formatDate(time, fmt) {\r\n  let date = new Date(time);\r\n\r\n  if (/(y+)/.test(fmt)) {\r\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\r\n  }\r\n  let o = {\r\n    'M+': date.getMonth() + 1,\r\n    'd+': date.getDate(),\r\n    'h+': date.getHours(),\r\n    'm+': date.getMinutes(),\r\n    's+': date.getSeconds()\r\n  };\r\n  for (let k in o) {\r\n    if (new RegExp(`(${k})`).test(fmt)) {\r\n      let str = o[k] + '';\r\n      fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? str : padLeftZero(str));\r\n    }\r\n  }\r\n  return fmt;\r\n};\r\nfunction padLeftZero(str) {\r\n  return ('00' + str).substr(str.length);\r\n};\r\nexport function getCookie(name) {\r\n  const cookieArr = document.cookie.split(';')\r\n  const cookies = cookieArr.map(item => {\r\n    if(item.split('=')[0] === name) return item.split('=')[1]\r\n  })\r\n  return cookies.length ? cookies[0] : 0\r\n}","E:\\react-app\\src\\pages\\home\\index.jsx",[],"E:\\react-app\\src\\pages\\index.jsx",["91"],"import Home from './home'\r\nimport Mine from './mine'\r\nimport Login from './login'\r\nimport NoPage from './noPage'\r\n\r\nexport default {\r\n  Home,\r\n  Mine,\r\n  Login,\r\n  NoPage\r\n}","E:\\react-app\\src\\pages\\mine\\index.jsx",["92"],"import React, { memo , useRef, useState } from 'react'\r\nimport { Editor } from '@tinymce/tinymce-react'\r\nimport { Button } from 'antd'\r\n\r\nimport './index.scss'\r\n\r\nexport default memo(function Mine(props) {\r\n  const editorDom = useRef()\r\n\r\n  const handleSubmit = (e) => {\r\n    console.log(editorDom.current.editor.getContent())\r\n  }\r\n  const resetArticle = () => {\r\n    editorDom.current.editor.setContent('')\r\n  }\r\n  return (\r\n    <div className=\"Article\">\r\n      <div className=\"container\">\r\n        <h1>发表文章：</h1>\r\n        <Editor\r\n          ref={editorDom}\r\n          initialValue=\"\"\r\n          apiKey=\"1jlkml2y8yh1td0wsoxi1dve9cde3dt473vg2xy1v5k15p1x\"\r\n          init={{\r\n            height: 500,\r\n            menubar: false,\r\n            language:'zh_CN',\r\n            plugins: 'preview searchreplace autolink directionality visualblocks visualchars fullscreen image link template code codesample table charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists wordcount imagetools textpattern help emoticons autosave formatpainter',\r\n            toolbar: 'code undo redo restoredraft | cut copy paste pastetext | forecolor backcolor bold italic underline strikethrough link anchor | alignleft aligncenter alignright alignjustify outdent indent | styleselect formatselect fontselect fontsizeselect | bullist numlist | blockquote subscript superscript removeformat | table image media charmap emoticons hr pagebreak insertdatetime print preview | fullscreen | bdmap indent2em lineheight formatpainter axupimgs',\r\n            fontsize_formats: '12px 14px 16px 18px 24px 36px 48px 56px 72px',\r\n            // images_upload_handler: (blobInfo, success, failure)=>{\r\n            //   if (blobInfo.blob()) {\r\n            //     const formData = new window.FormData();\r\n            //     formData.append('myFile', blobInfo.blob(), blobInfo.filename())\r\n            //     // axios.post(``,formData).then((res) => {\r\n            //     //   if(res.data){\r\n            //     //     // 将图片插入到编辑器中\r\n            //     //     success(res.data.data[0])\r\n            //     //   }\r\n            //     // }).catch((error) => {\r\n            //     //   alert(error);\r\n            //     // })\r\n            //   } else {\r\n            //     alert('error');\r\n            //   }\r\n            // }\r\n          }}\r\n          // onChange={e => setData(e.target.getContent())}\r\n        />\r\n        <div className=\"btn-box\">\r\n          <Button size=\"large\" type=\"primary\" onClick={handleSubmit}>提交</Button>\r\n          <Button size=\"large\" onClick={resetArticle}>重置</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n","E:\\react-app\\src\\pages\\login\\index.jsx",[],"E:\\react-app\\src\\components\\musicRequest\\index.jsx",["93"],"import axios from \"axios\";\r\nimport params from \"./config.js\";\r\n\r\naxios.defaults.baseURL = params.base_url\r\naxios.defaults.timeout = params.time_out\r\n\r\nfunction request(option = {}) {\r\n  return new Promise((resolve, reject) => {\r\n    let method = (option.type || 'get').toLowerCase() // 转换为小写\r\n    let data = method === 'get'? {params: option.data} : option.data\r\n    let url = option.url\r\n\r\n    axios[method](url,data).then(\r\n      res => {\r\n        // console.log(res)\r\n        resolve(res.data)\r\n      }\r\n    ).catch(\r\n      err => {\r\n        let response = err.response\r\n        if (response) {\r\n          switch (response.status) {\r\n            case 500:\r\n              alert('服务器响应失败')\r\n              break\r\n            case 504:\r\n              alert('请求超时')\r\n              break\r\n          }\r\n        }\r\n        reject(err)\r\n      }\r\n    )\r\n  })\r\n}\r\n\r\nexport default request","E:\\react-app\\src\\pages\\noPage\\index.jsx",[],"E:\\react-app\\src\\components\\music\\music-list\\index.jsx",["94"],"import React, { memo , useState, useEffect, useRef} from 'react'\r\nimport {\r\n  formatDate,\r\n} from '@/utils/format-utils'\r\n\r\nimport './index.scss'\r\n\r\nexport default memo((props) => {\r\n  const { \r\n    list, \r\n    changeMusic, \r\n    musicList , \r\n    musicIndex  \r\n  } = props\r\n  function chooseMusic(id,i,index) {\r\n    console.log(id)\r\n    setCurrentList(i)\r\n    setCurrentIndex(index)\r\n    changeMusic(id,i,index)\r\n  }\r\n\r\n  const listRef0 = useRef()\r\n  const listRef1 = useRef()\r\n\r\n  const [currentList, setCurrentList] = useState(0)\r\n  const [currentIndex, setCurrentIndex] = useState(0)\r\n\r\n  useEffect(() => {\r\n    let listDom = musicList === 0 ? listRef0 : listRef1\r\n    let scrollY = musicIndex > 4 ? (musicIndex - 4) * 29 : 0\r\n    listDom.current.scrollTo(0, musicIndex > 4 ? (musicIndex - 4) * 29 : 0)\r\n    console.log(scrollY)\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    setCurrentList(musicList)\r\n    setCurrentIndex(musicIndex)\r\n  }, [musicList,musicIndex])\r\n\r\n  return (\r\n    <div className=\"music-list-box\">\r\n      <div className=\"music-list\">\r\n        <div className=\"list-title\">\r\n          <div>热歌榜单（{list[0].length}）</div>\r\n          <div>新歌榜单（{list[1].length}）</div>\r\n        </div>\r\n        <div className=\"list-content\">\r\n          {\r\n            list.map((v,i) => {\r\n              return (\r\n                <ul key={i} ref={i === 0 ? listRef0 : listRef1}>\r\n                  {\r\n                    v.map((item,index) => {\r\n                      return (\r\n                        <li key={item.id} \r\n                            onClick={_=>chooseMusic(item.id,i,index)}\r\n                            className={(currentList === i && currentIndex === index) ? 'active' : ''}>\r\n                          <div>{item.name}</div>\r\n                          <div>{item.ar[0].name}</div>\r\n                          <div>{formatDate(item.dt, \"mm:ss\")}</div>\r\n                        </li>)\r\n                    })\r\n                  }\r\n                </ul>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n","E:\\react-app\\src\\components\\musicRequest\\config.js",["95"],"export default {\r\n  base_url: 'http://123.207.32.32:9001',\r\n  time_out: 5000\r\n}","E:\\react-app\\src\\router\\router.config.jsx",["96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":14},{"ruleId":"101","severity":1,"message":"105","line":7,"column":10,"nodeType":"103","messageId":"104","endLine":7,"endColumn":22},{"ruleId":"106","severity":1,"message":"107","line":86,"column":6,"nodeType":"108","endLine":86,"endColumn":15,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":98,"column":5,"nodeType":"108","endLine":98,"endColumn":15,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":183,"column":17,"nodeType":"114","endLine":183,"endColumn":92},{"ruleId":"115","severity":1,"message":"116","line":188,"column":19,"nodeType":"114","endLine":188,"endColumn":22},{"ruleId":"117","severity":1,"message":"118","line":33,"column":38,"nodeType":"119","messageId":"120","endLine":33,"endColumn":40},{"ruleId":"121","severity":1,"message":"122","line":6,"column":1,"nodeType":"123","endLine":11,"endColumn":2},{"ruleId":"101","severity":1,"message":"124","line":1,"column":32,"nodeType":"103","messageId":"104","endLine":1,"endColumn":40},{"ruleId":"125","severity":1,"message":"126","line":22,"column":11,"nodeType":"127","messageId":"128","endLine":29,"endColumn":12},{"ruleId":"106","severity":1,"message":"129","line":33,"column":5,"nodeType":"108","endLine":33,"endColumn":7,"suggestions":"130"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":1,"nodeType":"123","endLine":4,"endColumn":2},{"ruleId":"101","severity":1,"message":"131","line":6,"column":7,"nodeType":"103","messageId":"104","endLine":6,"endColumn":14},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'routes' is defined but never used.","Identifier","unusedVar","'renderRoutes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'level', 'list1.length', and 'playMusic'. Either include them or remove the dependency array.","ArrayExpression",["134"],"React Hook useEffect has a missing dependency: 'list1.length'. Either include it or remove the dependency array.",["135"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'musicIndex' and 'musicList'. Either include them or remove the dependency array.",["136"],"'MBLogin' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [level, list1.length, playMusic, songsId]",{"range":"143","text":"144"},"Update the dependencies array to be: [list1.length, loopType]",{"range":"145","text":"146"},"Update the dependencies array to be: [musicIndex, musicList]",{"range":"147","text":"148"},[2540,2549],"[level, list1.length, playMusic, songsId]",[2823,2833],"[list1.length, loopType]",[838,840],"[musicIndex, musicList]"]